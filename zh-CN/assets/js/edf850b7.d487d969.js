"use strict";(self.webpackChunktouchgfx_documentation=self.webpackChunktouchgfx_documentation||[]).push([[57827],{49613:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var i=n(59496);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,i,o=function(e,t){if(null==e)return{};var n,i,o={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=i.createContext({}),c=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=c(e.components);return i.createElement(s.Provider,{value:t},e.children)},h="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},d=i.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,u=r(e,["components","mdxType","originalType","parentName"]),h=c(n),d=o,m=h["".concat(s,".").concat(d)]||h[d]||p[d]||a;return n?i.createElement(m,l(l({ref:t},u),{},{components:n})):i.createElement(m,l({ref:t},u))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,l=new Array(a);l[0]=d;var r={};for(var s in t)hasOwnProperty.call(t,s)&&(r[s]=t[s]);r.originalType=e,r[h]="string"==typeof e?e:o,l[1]=r;for(var c=2;c<a;c++)l[c]=n[c];return i.createElement.apply(null,l)}return i.createElement.apply(null,n)}d.displayName="MDXCreateElement"},96151:(e,t,n)=>{n.d(t,{Z:()=>a});var i=n(59496);class o extends i.Component{render(){const e=`highlight highlight-${this.props.type}`;return i.createElement("div",{className:e},i.createElement("div",{className:"highlight-heading"},i.createElement("h5",null,i.createElement("div",{className:"highlight-icon"},this.props.icon),this.props.header)),i.createElement("div",{className:"highlight-content"},this.props.children))}}const a=o},49018:(e,t,n)=>{n.d(t,{Z:()=>r});var i=n(59496),o=n(96151);const a=i.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},i.createElement("path",{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}));class l extends i.Component{render(){return i.createElement(o.Z,{color:"var(--highlight-color-note)",header:"Note",type:"note",icon:a},this.props.children)}}const r=l},2541:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>h,contentTitle:()=>c,default:()=>f,frontMatter:()=>s,metadata:()=>u,toc:()=>p});n(59496);var i=n(49613),o=n(95375),a=n(49018);function l(){return l=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e},l.apply(this,arguments)}function r(e,t){if(null==e)return{};var n,i,o=function(e,t){if(null==e)return{};var n,i,o={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}const s={id:"compiling-and-flashing",title:"\u7f16\u8bd1& \u70e7\u5f55"},c=void 0,u={unversionedId:"development/ui-development/working-with-touchgfx/compiling-and-flashing",id:"development/ui-development/working-with-touchgfx/compiling-and-flashing",title:"\u7f16\u8bd1& \u70e7\u5f55",description:"\u672c\u8282\u63cf\u8ff0\u5982\u4f55\u5b8c\u6210\u4eceTouchGFX\u5e94\u7528\u7a0b\u5e8f\u4ee3\u7801\u5230\u7a0b\u5e8f\u6267\u884c\u8fd9\u4e00\u8fc7\u7a0b\uff0c\u5373\u5982\u4f55\u5728\u7279\u5b9a\u7684\u8bbe\u7f6e\u4e2d\u8fdb\u884c\u7f16\u8bd1\u548c\u70e7\u5f55\u3002",source:"@site/i18n/zh-CN/docusaurus-plugin-content-docs/current/development/ui-development/working-with-touchgfx/compiling-and-flashing.mdx",sourceDirName:"development/ui-development/working-with-touchgfx",slug:"/development/ui-development/working-with-touchgfx/compiling-and-flashing",permalink:"/4.24/zh-CN/docs/development/ui-development/working-with-touchgfx/compiling-and-flashing",draft:!1,tags:[],version:"current",frontMatter:{id:"compiling-and-flashing",title:"\u7f16\u8bd1& \u70e7\u5f55"},sidebar:"docs",previous:{title:"\u6a21\u62df\u5668",permalink:"/4.24/zh-CN/docs/development/ui-development/working-with-touchgfx/simulator"},next:{title:"\u8c03\u8bd5",permalink:"/4.24/zh-CN/docs/development/ui-development/working-with-touchgfx/debugging"}},h={},p=[{value:"\u7f16\u8bd1TouchGFX\u5e94\u7528\u7a0b\u5e8f",id:"compiling-touchgfx-applications",level:2},{value:"\u9762\u5411PC\u6a21\u62df\u5668\u8fdb\u884c\u7f16\u8bd1",id:"compiling-for-pc-simulator",level:3},{value:"GCC",id:"gcc",level:4},{value:"Visual Studio",id:"visual-studio",level:4},{value:"\u9762\u5411\u76ee\u6807\u786c\u4ef6\u8fdb\u884c\u7f16\u8bd1",id:"compiling-for-target-hardware",level:3},{value:"\u70e7\u5f55STM32\u8bc4\u4f30\u5957\u4ef6",id:"flashing-stm32-evaluation-kits",level:2},{value:"GCC\u4e0eTouchGFX Designer",id:"gcc--touchgfx-designer",level:3},{value:"Flashing the internal flash only",id:"flash-internal",level:3},{value:"Linker script",id:"linker-script",level:4},{value:"TouchGFX Designer Configuration",id:"designer-configuration",level:3},{value:"STM32CubeIDE",id:"stm32cubeide",level:3},{value:"IAR",id:"iar",level:3},{value:"Keil",id:"keil",level:3},{value:"\u70e7\u5f55\u81ea\u5b9a\u4e49\u786c\u4ef6",id:"flashing-custom-hardware",level:2}],d={toc:p},m="wrapper";function f(e){var{components:t}=e,n=r(e,["components"]);return(0,i.kt)(m,l({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"\u672c\u8282\u63cf\u8ff0\u5982\u4f55\u5b8c\u6210\u4eceTouchGFX\u5e94\u7528\u7a0b\u5e8f\u4ee3\u7801\u5230\u7a0b\u5e8f\u6267\u884c\u8fd9\u4e00\u8fc7\u7a0b\uff0c\u5373\u5982\u4f55\u5728\u7279\u5b9a\u7684\u8bbe\u7f6e\u4e2d\u8fdb\u884c\u7f16\u8bd1\u548c\u70e7\u5f55\u3002"),(0,i.kt)("h2",l({},{id:"compiling-touchgfx-applications"}),"\u7f16\u8bd1TouchGFX\u5e94\u7528\u7a0b\u5e8f"),(0,i.kt)("p",null,"\u5f53\u7f16\u8bd1\u4e00\u4e2aTouchGFX\u5e94\u7528\u7a0b\u5e8f\u65f6\uff0c\u6709\u4e24\u4e2a\u9009\u9879\uff1a\u9762\u5411PC\u6a21\u62df\u5668\u8fdb\u884c\u7f16\u8bd1\uff0c\u6216\u9762\u5411\u76ee\u6807\u786c\u4ef6\u8fdb\u884c\u7f16\u8bd1\u3002"),(0,i.kt)("h3",l({},{id:"compiling-for-pc-simulator"}),"\u9762\u5411PC\u6a21\u62df\u5668\u8fdb\u884c\u7f16\u8bd1"),(0,i.kt)("p",null,"\u9762\u5411PC\u6a21\u62df\u5668\u7f16\u8bd1\u9879\u76ee\u65f6\u6709\u4e24\u4e2a\u9009\u9879\uff1aGCC\u548cVisual Studio\u3002 ",(0,i.kt)("br",null)," \u8fd9\u4e24\u4e2a\u9009\u9879\u59cb\u7ec8\u53ef\u7528\uff0c\u56e0\u4e3a\u5b83\u4eec\u662f\u7531TouchGFX Designer\u751f\u6210\u7684\u3002"),(0,i.kt)("h4",l({},{id:"gcc"}),"GCC"),(0,i.kt)("p",null,"Makefile\u7684\u4f4d\u7f6e",(0,i.kt)("inlineCode",{parentName:"p"},"<touchgfx_application_root_folder>/simulator/gcc/Makefile")),(0,i.kt)("p",null,"TouchGFX\u5305\u542b\u4e00\u4e2aMinGW\u73af\u5883\uff0c\u8be5\u73af\u5883\u9884\u88c5\u4e86\u4e00\u4e2aGCC\u7f16\u8bd1\u5668\u548cGNU Make\uff0c\u53ef\u4ee5\u8f7b\u677e\u6267\u884c\u9762\u5411PC\u6a21\u62df\u5668\u751f\u6210\u7684Makefile\u3002"),(0,i.kt)("p",null,"TouchGFX Environment\u53ef\u4ee5\u4ece",(0,i.kt)("inlineCode",{parentName:"p"},"C:/TouchGFX/4.18.0/env/MinGW/msys/1.0/msys.bat"),"\u542f\u52a8\uff0c\u6216\u8005\u4ece\u6dfb\u52a0\u5230Windows\u542f\u52a8\u83dc\u5355\u7684\u5feb\u6377\u65b9\u5f0f\uff08\u540d\u4e3a\u201cTouchGFX x.y.z Environment\u201d\uff0c\u5176\u4e2dx\u3001y\u548cz\u63cf\u8ff0\u7248\u672c\u53f7\uff09\u542f\u52a8\u3002"),(0,i.kt)("p",null,"\u5728\u542f\u52a8TouchGFX Environment\u5e76\u5bfc\u822a\u5230TouchGFX Application\u6839\u6587\u4ef6\u5939\u540e\uff0c\u53ef\u4ee5\u6267\u884c\u4e0b\u9762\u7684\u7b80\u5355\u547d\u4ee4\u4ee5\u751f\u6210\u4e00\u4e2asimulator.exe\u6587\u4ef6\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{}),"make -f simulator/gcc/Makefile\n")),(0,i.kt)("p",null,"\u7136\u540e\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u4eceTouchGFX Environment\u542f\u52a8\u6a21\u62df\u5668\u53ef\u6267\u884c\u6587\u4ef6\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{}),"./build/bin/simulator.exe\n")),(0,i.kt)("p",null,"\u4e5f\u53ef\u4ee5\u4eceTouchGFX Designer\u7f16\u8bd1\u548c\u542f\u52a8PC\u6a21\u62df\u5668\uff0c\u65b9\u6cd5\u662f\u4f7f\u7528",(0,i.kt)(o.Z,{to:"../designer-user-guide/main-window#run-simulator",mdxType:"Link"},"Run Simulator"),"\u547d\u4ee4\u3002"),(0,i.kt)("h4",l({},{id:"visual-studio"}),"Visual Studio"),(0,i.kt)("p",null,"\u8981\u4f7f\u7528Visual Studio\u7f16\u8bd1PC Simulator\uff0c\u53ea\u9700\u4f7f\u7528Visual Studio\u6253\u5f00\u4f4d\u4e8e",(0,i.kt)("inlineCode",{parentName:"p"},"<touchgfx_application_root_folder>/simulator/msvs/Application.sln"),"\u7684\u5df2\u751f\u6210\u89e3\u51b3\u65b9\u6848\u6587\u4ef6\u3002"),(0,i.kt)("p",null,"\u53ef\u4ee5\u76f4\u63a5\u4eceVisual Studio\u542f\u52a8PC \u6a21\u62df\u5668\uff0c\u542f\u7528",(0,i.kt)("a",l({parentName:"p"},{href:"debugging"}),"\u4ee3\u7801\u8c03\u8bd5"),"\u3002"),(0,i.kt)(a.Z,{mdxType:"Note"},"\u5728\u8fd0\u7528GCC\u6216Visual Studio\u8fdb\u884c\u7f16\u8bd1\u4e4b\u524d\uff0c\u4eceTouchGFX Designer\u8fd0\u884c",(0,i.kt)(o.Z,{to:"../designer-user-guide/main-window#generate-code",mdxType:"Link"},"Generate"),"\u547d\u4ee4\u3002"),(0,i.kt)("h3",l({},{id:"compiling-for-target-hardware"}),"\u9762\u5411\u76ee\u6807\u786c\u4ef6\u8fdb\u884c\u7f16\u8bd1"),(0,i.kt)("p",null,"\u5bf9\u4e8e\u57fa\u4e8e",(0,i.kt)("a",l({parentName:"p"},{href:"../../../introduction/getting-started#application-template--ui-template"}),"TouchGFX\u677f\u5361\u8bbe\u7f6e"),"\u7684\u5e94\u7528\u7a0b\u5e8f\u6765\u8bf4\uff0c\u9762\u5411STM32\u8bc4\u4f30\u5957\u4ef6\u8fdb\u884c\u9879\u76ee\u7f16\u8bd1\u662f\u975e\u5e38\u7b80\u5355\u7684\u3002",(0,i.kt)("br",null)),(0,i.kt)("p",null,"\u6bcf\u4e2aTouchGFX\u677f\u5361\u8bbe\u7f6e\u5305\u542b\u9762\u5411GCC\u3001STM32CubeIDE\u3001IAR\u548cKeil\u7684\u9879\u76ee\u6587\u4ef6\uff1a"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"GCC: ",(0,i.kt)("inlineCode",{parentName:"li"},"<project_root_folder>/gcc/MakeFile")),(0,i.kt)("li",{parentName:"ul"},"STM32CubeIDE: ",(0,i.kt)("inlineCode",{parentName:"li"},"<project_root_folder>/STM32CubeIDE/.cproject")),(0,i.kt)("li",{parentName:"ul"},"IAR: ",(0,i.kt)("inlineCode",{parentName:"li"},"<project_root_folder>/EWARM/Project.eww")),(0,i.kt)("li",{parentName:"ul"},"Keil: ",(0,i.kt)("inlineCode",{parentName:"li"},"<project_root_folder>/MDK-ARM/<STM32_evaluation_kit_name>.uvprojx"))),(0,i.kt)("p",null,"STM32CubeMX\u9ed8\u8ba4\u8bbe\u7f6e\u7684\u6d3b\u52a8\u5de5\u5177\u94fe\u4e3aSTM32CubeIDE\u3002 ",(0,i.kt)("em",{parentName:"p"},"\u8bf7\u6ce8\u610f\uff01\u6240\u6709\u9879\u76ee\u6587\u4ef6\u4e0d\u4f1a\u540c\u65f6\u51fa\u73b0\u3002 \u751f\u6210\u7684\u9879\u76ee\u6587\u4ef6\u53d6\u51b3\u4e8e\u5728STM32CubeMX\u4e2d\u9009\u62e9\u7684\u5de5\u5177\u94fe")),(0,i.kt)("p",null,"TouchGFX includes a MinGW environment, that comes preinstalled with the GNU Embedded tool-chain for Arm and GNU Make, making it easy to execute the included Makefile for the target hardware."),(0,i.kt)("p",null,"TouchGFX Environment\u53ef\u4ee5\u4ece",(0,i.kt)("inlineCode",{parentName:"p"},"C:/TouchGFX/4.18.0/env/MinGW/msys/1.0/msys.bat"),"\u542f\u52a8\uff0c\u6216\u8005\u4ece\u6dfb\u52a0\u5230Windows\u542f\u52a8\u83dc\u5355\u7684\u5feb\u6377\u65b9\u5f0f\u201cTouchGFX x.y.z Environment\u201d\u542f\u52a8"),(0,i.kt)("p",null,"\u5728\u542f\u52a8TouchGFX Environment\u5e76\u5bfc\u822a\u5230\u9879\u76ee\u6839\u6587\u4ef6\u5939\u540e\uff0c\u53ef\u4ee5\u6267\u884c\u4e0b\u9762\u7684\u7b80\u5355\u547d\u4ee4\uff0c\u9762\u5411\u76ee\u6807\u786c\u4ef6\u8fdb\u884c\u9879\u76ee\u7f16\u8bd1\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{}),"make -f gcc/Makefile\n")),(0,i.kt)(a.Z,{mdxType:"Note"},"\u5728\u8fd0\u7528GCC\u3001STM32CubeIDE\u3001IAR\u6216Keil\u8fdb\u884c\u7f16\u8bd1\u4e4b\u524d\uff0c\u4eceTouchGFX Designer\u8fd0\u884c",(0,i.kt)(o.Z,{to:"../designer-user-guide/main-window#generate-code",mdxType:"Link"},"Generate"),"\u547d\u4ee4\u3002"),(0,i.kt)("h2",l({},{id:"flashing-stm32-evaluation-kits"}),"\u70e7\u5f55STM32\u8bc4\u4f30\u5957\u4ef6"),(0,i.kt)("p",null,"\u56e0\u4e3a\u9879\u76ee\u57fa\u4e8e\u9884\u5148\u5b8c\u6210\u7684",(0,i.kt)("a",l({parentName:"p"},{href:"../../../introduction/getting-started#application-template--ui-template"}),"TouchGFX\u677f\u5361\u8bbe\u7f6e"),"\uff0c\u5c06\u9879\u76ee\u70e7\u5f55\u5230STM32\u8bc4\u4f30\u5957\u4ef6\u662f\u975e\u5e38\u8f7b\u677e\u7684\u3002",(0,i.kt)("br",null)),(0,i.kt)("p",null,"\u6bcf\u4e2a\u9879\u76ee\u5728\u6784\u5efa\u4e4b\u540e\u90fd\u4f1a\u751f\u6210\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u8be5\u6587\u4ef6\u53ef\u4ee5\u901a\u8fc7",(0,i.kt)("a",l({parentName:"p"},{href:"https://www.st.com/en/development-tools/stsw-link004.html"}),"ST Link Utility"),"\u6216",(0,i.kt)("a",l({parentName:"p"},{href:"https://www.st.com/en/development-tools/stm32cubeprog.html"}),"STM32CubeProgrammer"),"\u5237\u5199\u3002"),(0,i.kt)("p",null,"\u56e0\u6b64\uff0c\u5fc5\u987b\u5b89\u88c5\u8fd9\u4e9b\u5de5\u5177\uff0c\u624d\u80fd\u8fdb\u884c\u70e7\u5f55\u3002"),(0,i.kt)("p",null,"\u5efa\u8bae\u5c06\u8fd9\u4e9b\u5de5\u5177\u5b89\u88c5\u5230\u9ed8\u8ba4\u4f4d\u7f6e\u3002"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"ST Link Utility\u9ed8\u8ba4\u5b89\u88c5\u4f4d\u7f6e\uff1a",(0,i.kt)("br",null),(0,i.kt)("inlineCode",{parentName:"li"},"C:/Program Files (x86)/STMicroelectronics/STM32 ST-LINK Utility/ST-LINK Utility")),(0,i.kt)("li",{parentName:"ul"},"STM32CubeProgrammer\u9ed8\u8ba4\u5b89\u88c5\u4f4d\u7f6e\uff1a",(0,i.kt)("br",null),(0,i.kt)("inlineCode",{parentName:"li"},"C:/Program Files/STMicroelectronics/STM32Cube/STM32CubeProgrammer"))),(0,i.kt)(a.Z,{mdxType:"Note"},"TouchGFX\u677f\u5361\u8bbe\u7f6e\u4e0d\u63d0\u4f9b\u4efb\u4f55flash loader\uff0c\u7528\u4e8e\u76f4\u63a5\u4eceIAR\u3001Keil\u3001STM32CubeIDE\u6216\u5176\u4ed6IDE\u8fdb\u884c\u70e7\u5f55\u3002"),(0,i.kt)("h3",l({},{id:"gcc--touchgfx-designer"}),"GCC\u4e0eTouchGFX Designer"),(0,i.kt)("p",null,"The Makefile included with an TouchGFX Board Setup located at ",(0,i.kt)("inlineCode",{parentName:"p"},"<project_root_folder>/gcc/MakeFile")," has a built-in flash command, as shown below, that uses either ST Link Utility or STM32CubeProgrammer (depending on the TBS) to flash the STM32 Evaluation Kit."),(0,i.kt)("p",null,"You can start the flashing from the command-line using the same command as TouchGFX Designer uses:"),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{}),"make -f gcc/Makefile flash\n")),(0,i.kt)("p",null,"You can also use the desktop version of the flash tools to flash the boards with the generated .hex files. The .hex file is located at ",(0,i.kt)("inlineCode",{parentName:"p"},"<project_root_folder>/TouchGFX/build/bin/target.hex")),(0,i.kt)("h3",l({},{id:"flash-internal"}),"Flashing the internal flash only"),(0,i.kt)("p",null,"Many development boards and products use two flashes. The internal flash of the micro controller and an external flash. Typically, the internal flash contains the code and small/often used data, whereas the external flash contains large data items like images, videos and fonts."),(0,i.kt)("p",null,"In many situations, you need to flash both flashes at the same time as the program in the internal flash contains addresses pointing to the data in the external flash. But in some cases it is possible to flash the internal flash without flashing the external flash, for example when you have made small modifications to the application code (like changing the color or position of a Box). In this case, all the data in the external flash is unmodified and there is no need to flash it again. This can reduce the flash time considerably if you have a large set of images."),(0,i.kt)("p",null,"However, you need to be sure that the content for the external flash has not changed since you wrote the external flash last time. If it has, and you do not flash it again, you will see strange behavior. In this case: flash both the internal and external flash."),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{}),"make -f gcc/Makefile intflash\n")),(0,i.kt)("p",null,"The .hex file for the internal flash is located at: ",(0,i.kt)("inlineCode",{parentName:"p"},"<project_root_folder>/TouchGFX/build/bin/intflash.hex"),"."),(0,i.kt)("h4",l({},{id:"linker-script"}),"Linker script"),(0,i.kt)("p",null,"The intflash make target first compiles and links the application. It then flashes the ",(0,i.kt)("inlineCode",{parentName:"p"},"intflash.hex")," file. This file is produced after the linking step by removing the ",(0,i.kt)("inlineCode",{parentName:"p"},"ExternalFlashSection"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"TextFlashSection"),", and ",(0,i.kt)("inlineCode",{parentName:"p"},"FontFlashSection")," sections from the application ",(0,i.kt)("inlineCode",{parentName:"p"},"elf")," file. This is done using the following command:"),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{}),"arm-none-eabi-objcopy -O ihex --remove-section=ExtFlashSection --remove-section=FontFlashSection --remove-section=TextFlashSection target.elf intflash.hex\n")),(0,i.kt)("p",null,"The result of this command is a hex-file containing only the data that is located in the internal flash. This will only work if the linker script only puts the three aforementioned sections into the external flash. The gcc linker script for the TouchGFX Board Setups typically looks like:"),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{}),"...  /* Details skipped */\n\nMEMORY\n{\nRAM (xrw)      : ORIGIN = 0x20000000, LENGTH = 320K\nFLASH (rx)     : ORIGIN = 0x8000000, LENGTH = 1024K\nQUADSPI (r)    : ORIGIN = 0x90000000, LENGTH = 16M\nSDRAM   (xrw)  : ORIGIN = 0xC0000000,  LENGTH = 8M\n}\n\nSECTIONS\n{\n  ... /* Sections for RAM, Flash, SDRAM */\n\n  ExtFlashSection :\n  {\n      *(ExtFlashSection ExtFlashSection.*)\n      *(.gnu.linkonce.r.*)\n      . = ALIGN(0x4);\n  } >QUADSPI\n\n  FontFlashSection :\n  {\n      *(FontFlashSection FontFlashSection.*)\n      *(.gnu.linkonce.r.*)\n      . = ALIGN(0x4);\n  } >QUADSPI\n\n  TextFlashSection :\n  {\n      *(TextFlashSection TextFlashSection.*)\n      *(.gnu.linkonce.r.*)\n      . = ALIGN(0x4);\n  } >QUADSPI\n}\n")),(0,i.kt)("p",null,"The linker script first defines 4 memory regions: ",(0,i.kt)("inlineCode",{parentName:"p"},"RAM"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"FLASH"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"QUADSPI"),", and ",(0,i.kt)("inlineCode",{parentName:"p"},"SDRAM"),". The ",(0,i.kt)("inlineCode",{parentName:"p"},"QUADSPI")," region is the external flash. The 3 sections ",(0,i.kt)("inlineCode",{parentName:"p"},"ExtFlashSection"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"FontFlashSection"),", and ",(0,i.kt)("inlineCode",{parentName:"p"},"TextFlashSections")," are linked into the ",(0,i.kt)("inlineCode",{parentName:"p"},"QUADSPI")," region. Nothing else is put into the ",(0,i.kt)("inlineCode",{parentName:"p"},"QUADSPI")," region. This is the reason that we can produce a hex file for the internal flash by removing these 3 section from the ",(0,i.kt)("inlineCode",{parentName:"p"},"target.elf")," file, which contains everything. If the linker script also puts other data into the external flash, we would need to remove that data also to end up with the internal flash content only."),(0,i.kt)("p",null,"If you build your target ",(0,i.kt)("inlineCode",{parentName:"p"},"elf")," file using other makefiles or compilers, you can reuse the technique above to create a hex file for the internal flash and flash it from TouchGFX Designer or the command-line."),(0,i.kt)("h3",l({},{id:"designer-configuration"}),"TouchGFX Designer Configuration"),(0,i.kt)("p",null,"The TouchGFX Board Setup provides the configuration for TouchGFX Designer to be able to flash projects via the ",(0,i.kt)("a",l({parentName:"p"},{href:"../designer-user-guide/main-window#run-target"}),"Run Target Command"),". \u88abTouchGFX Designer\u7528\u4e8e\u8fdb\u884c\u70e7\u5f55\u7684\u547d\u4ee4\u53ef\u4ee5\u5728TouchGFX Designer\u4e2d",(0,i.kt)("a",l({parentName:"p"},{href:"../designer-user-guide/config-view"}),"\u914d\u7f6e\u89c6\u56fe"),"\u7684",(0,i.kt)("a",l({parentName:"p"},{href:"../designer-user-guide/config-view#build"}),"\u6784\u5efa\u90e8\u5206"),"\u770b\u89c1\u5e76\u8986\u76d6\u3002"),(0,i.kt)("h3",l({},{id:"stm32cubeide"}),"STM32CubeIDE"),(0,i.kt)("p",null,"TouchGFX\u677f\u5361\u8bbe\u7f6e\u4f7f\u7528STM32CubeIDE\u8f93\u51fa\u7684.elf\u6587\u4ef6\u652f\u6301\u901a\u8fc7STM32CubeProgrammer\u5bf9\u7528STM32CubeIDE\u7f16\u8bd1\u7684\u9879\u76ee\u8fdb\u884c\u70e7\u5f55\u3002"),(0,i.kt)("p",null,".elf\u6587\u4ef6\u4f4d\u4e8e",(0,i.kt)("inlineCode",{parentName:"p"},"<project_root_folder>/STM32CubeIDE/Debug/<STM32_evaluation_kit_name>.elf")),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"e.g. C:/TouchGFXProjects/MyApplication/STM32CubeIDE/Debug/STM32F746G_DISCO.elf")),(0,i.kt)("h3",l({},{id:"iar"}),"IAR"),(0,i.kt)("p",null,"TouchGFX\u677f\u5361\u8bbe\u7f6e\u4f7f\u7528IAR\u8f93\u51fa\u7684.hex\u6587\u4ef6\u652f\u6301\u901a\u8fc7STM32CubeProgrammer\u5bf9\u7528IAR\u7f16\u8bd1\u7684\u9879\u76ee\u8fdb\u884c\u70e7\u5f55\u3002"),(0,i.kt)("p",null,".hex\u6587\u4ef6\u4f4d\u4e8e",(0,i.kt)("inlineCode",{parentName:"p"},"<project_root_folder>/EWARM/<STM32_evaluation_kit_name>/Exe/<STM32_evaluation_kit_name>.hex")),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"\u4f8b\u5982\uff0cC:/TouchGFXProjects/MyApplication/EWARM/STM32F469I-DISCO/STM32F469I-DISCO.hex")),(0,i.kt)("h3",l({},{id:"keil"}),"Keil"),(0,i.kt)("p",null,"TouchGFX\u677f\u5361\u8bbe\u7f6e\u4f7f\u7528Keil\u8f93\u51fa\u7684.hex\u6587\u4ef6\u652f\u6301\u901a\u8fc7STM32CubeProgrammer\u5bf9\u7528Keil\u7f16\u8bd1\u7684\u9879\u76ee\u8fdb\u884c\u70e7\u5f55\u3002"),(0,i.kt)("p",null,".hex\u6587\u4ef6\u4f4d\u4e8e",(0,i.kt)("inlineCode",{parentName:"p"},"<project_root_folder>/MDK-ARM/<STM32_evaluation_kit_name>/<STM32_evaluation_kit_name>.hex")),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"e.g. C:/TouchGFXProjects/MyApplication/MDK-ARM/STM32F469I-DISCO/STM32F469I-DISCO.hex")),(0,i.kt)("h2",l({},{id:"flashing-custom-hardware"}),"\u70e7\u5f55\u81ea\u5b9a\u4e49\u786c\u4ef6"),(0,i.kt)("p",null,"\u5982\u679c\u9700\u8981\u5237\u5199\u7684\u662f\u81ea\u5b9a\u4e49\u786c\u4ef6\uff0c\u800c\u4e0d\u662fSTM32\u8bc4\u4f30\u5957\u4ef6\u8fd9\u6837\u7684\u9884\u5b9a\u4e49\u786c\u4ef6\u8bbe\u7f6e\uff0c\u5219\u4ecd\u7136\u53ef\u4ee5\u4f7f\u7528STM32CubeProgrammer\u3002 STM32CubeProgrammer\u4e0d\u4e00\u5b9a\u5e26\u6709\u9488\u5bf9\u4f60\u7684\u7279\u5b9a\u5916\u90e8\u5b58\u50a8\u5668\u7684flash\u52a0\u8f7d\u673a\u5236\u3002 \u7136\u800c\uff0c\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684flash loader\u3002 \u53c2\u9605",(0,i.kt)("a",l({parentName:"p"},{href:"https://www.st.com/resource/en/user_manual/dm00403500-stm32cubeprogrammer-software-description-stmicroelectronics.pdf"}),"\u5173\u4e8e\u5982\u4f55\u4e3a\u5916\u90e8\u5b58\u50a8\u5668\u5f00\u53d1\u81ea\u5b9a\u4e49\u52a0\u8f7d\u5668\u7684\u7528\u6237\u624b\u518c"),"\u53ef\u4e86\u89e3\u66f4\u591a\u4fe1\u606f\u3002"))}f.isMDXComponent=!0}}]);